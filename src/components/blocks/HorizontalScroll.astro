---
import Picture from "astro/components/Picture.astro";
import bgScroll from "../../assets/bg-scroll-original.png";
import Container from "../Container.astro";
import TextStarText from "../TextStarText.astro";
import Title from "../Title.astro";
---

<div class="relative">
  <div
    class="mask-top mask-cover h-[13.3vw] w-full absolute top-[0] z-1 -translate-y-[99%]"
    style={`mask-image: url('/export-exclude-top.svg');`}
  >
    <div class="bg-indigo-dark absolute inset-0 size-full">
      <Picture
        loading={"eager"}
        alt=""
        formats={["avif", "webp", "png"]}
        src={bgScroll}
        width={2000}
        height={1080}
        class="object-cover object-center absolute inset-0 size-full opacity-50"
      />
    </div>
  </div>

  <section
    data-pin-end-trigger
    class="bg-linear-to-t from-blue-royal to-indigo-dark text-blue-pale relative overflow-hidden mask-center mask-no-repeat mask-cover"
  >
    <div class="grid grid-rows-6 absolute inset-0 size-full">
      <Picture
        alt=""
        loading={"eager"}
        formats={["avif", "webp", "png"]}
        src={bgScroll}
        width={2000}
        height={1080}
        class="object-cover object-top relative inset-0 opacity-50 size-full"
      />

      <Picture
        alt=""
        loading={"eager"}
        formats={["avif", "webp", "png"]}
        src={bgScroll}
        width={2000}
        height={1080}
        class="object-cover object-top relative inset-0 opacity-50 size-full"
      />

      <Picture
        alt=""
        loading={"eager"}
        formats={["avif", "webp", "png"]}
        src={bgScroll}
        width={2000}
        height={1080}
        class="object-cover object-center relative inset-0 opacity-50 size-full"
      />

      <Picture
        alt=""
        loading={"eager"}
        formats={["avif", "webp", "png"]}
        src={bgScroll}
        width={2000}
        height={1080}
        class="object-cover object-center relative inset-0 opacity-50 size-full"
      />

      <Picture
        alt=""
        loading={"eager"}
        formats={["avif", "webp", "png"]}
        src={bgScroll}
        width={2000}
        height={1080}
        class="object-cover object-bottom relative inset-0 opacity-50 size-full"
      />

      <Picture
        alt=""
        loading={"eager"}
        formats={["avif", "webp", "png"]}
        src={bgScroll}
        width={2000}
        height={1080}
        class="object-cover object-bottom inset-0 opacity-50 size-full"
      />
    </div>

    <Container>
      <div data-horizontal-scroll-section>
        <div class="w-[200vw] pt-[100px]">
          <div
            class="flex items-center h-screen gap-[10vw] p-0"
            data-horizontal-scroll-container
          >
            <div data-horizontal-scroll class="basis-auto grow-0 shrink-0">
              <div class="max-w-[680px] flex flex-col gap-4">
                <TextStarText
                  items={["Universo e stelle", "Teoria del tutto e scienza"]}
                />
                <Title size="md">
                  <div data-text>
                    Il romanzo esplora il cosmo e i misteri dell’universo. Si
                    ispira alle ricerche di Nassim Haramein e alla fisica
                    quantistica.
                  </div>
                </Title>
              </div>
            </div>

            <div data-horizontal-scroll class="basis-auto grow-0 shrink-0">
              <div
                class="max-w-[680px] -translate-y-[25vh] flex flex-col gap-4"
              >
                <TextStarText
                  items={[
                    "Destino e consapevolezza",
                    "Profumi e percezione sensoriale",
                  ]}
                />
                <Title size="md">
                  <div data-text>
                    La protagonista ha un talento speciale legato agli odori. È
                    alla ricerca del senso della propria esistenza.
                  </div>
                </Title>
              </div>
            </div>

            <div data-horizontal-scroll class="basis-auto grow-0 shrink-0">
              <div class="max-w-[680px] translate-y-[10vh] flex flex-col gap-4">
                <TextStarText
                  items={[
                    "Spiritualità e antiche civiltà",
                    "Futurismo e innovazione",
                  ]}
                />
                <Title size="md">
                  <div data-text>
                    Il libro tocca temi legati all’Egitto e ai simboli esoterici
                    come il
                    <i>Fiore della Vita</i>. Nascerà l’idea di creare un profumo
                    che rappresenti l’universo.
                  </div>
                </Title>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Container>
  </section>
</div>

<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";
  import SplitText from "gsap/SplitText";
  gsap.registerPlugin(ScrollTrigger, SplitText);

  const panels = gsap.utils.toArray("[data-horizontal-scroll]");

  const scrollHorizontal = gsap.to("[data-horizontal-scroll-container]", {
    xPercent: -100 * (panels.length - 2),
    ease: "none",
    scrollTrigger: {
      trigger: "[data-horizontal-scroll-section]",
      pin: true,
      scrub: 1,
      markers: false,
      start: "top top",
      end: () =>
        "+=" +
        (
          document.querySelector(
            "[data-horizontal-scroll-container]"
          ) as HTMLElement
        ).offsetWidth,
    },
  });

  // Animate each horizontal scroll section
  gsap.utils
    .toArray("[data-horizontal-scroll]")
    .forEach((horizontalScroll, i) => {
      let text = (horizontalScroll as HTMLElement)?.querySelector(
        "[data-text]"
      );
      if (!text) return;

      gsap.fromTo(
        horizontalScroll as HTMLElement,
        { opacity: 0 },
        {
          opacity: 1,
          scrollTrigger: {
            ...(i !== 0 ? { containerAnimation: scrollHorizontal } : {}),
            trigger: horizontalScroll as HTMLElement,
            markers: false,
            toggleActions: "play none restart none",
          },
        }
      );

      // Split the text into words
      let split = SplitText.create(text as HTMLElement, {
        type: "words",
        linesClass: "line",
      });

      gsap.from(split.words, {
        scrollTrigger: {
          ...(i !== 0 ? { containerAnimation: scrollHorizontal } : {}),
          trigger: horizontalScroll as HTMLElement,
          markers: false,
          // toggleActions: "restart none restart none",
        },
        opacity: 0,
        duration: 2,
        ease: "sine.out",
        stagger: 0.1,
      });
    });
</script>
